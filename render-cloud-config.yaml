---
- name: Render cloud-config template
  hosts: localhost
  gather_facts: no
  # vars_files:
  #   - vars.yaml

  tasks:
    - name: Render cloud-config template
      template:
        src: ../templates/cloud-config.j2
        dest: rendered-cloud-config.yaml


    # - name: Read rendered cloud-config file and base64 encode
    #   slurp:
    #     src: rendered-cloud-config.yaml
    #   register: cloud_config

    # - name: Set API request payload fact
    #   set_fact:
    #     vultr_request_body:
    #       region: "{{ region }}"
    #       plan: "{{ plan }}"
    #       os_id: "{{ os_id }}"
    #       label: "{{ label }}"
    #       hostname: "{{ hostname }}"
    #       user_data: "{{ cloud_config.content }}"

    # - name: Debug the request body to Vultr API
    #   debug:
    #     var: vultr_request_body

    # - name: Create VPS on Vultr
    #   uri:
    #     url: https://api.vultr.com/v2/instances
    #     method: POST
    #     headers:
    #       Authorization: "Bearer {{ vultr_api_key }}"
    #       Content-Type: "application/json"
    #     body_format: json
    #     body: "{{ vultr_request_body }}"
    #   register: create_response
    #   failed_when: create_response.status not in [200, 201, 202]

    # - name: Debug API response status
    #   debug:
    #     msg: "Vultr API returned status code {{ create_response.status }}"

    # - name: Debug API response JSON content
    #   debug:
    #     var: create_response.json

    # - name: Set instance ID
    #   set_fact:
    #     instance_id: "{{ create_response.json.instance.id }}"

    # - name: Output instance ID for wrapper script
    #   debug:
    #     msg: "INSTANCE_ID={{ instance_id }}"
    #   when: print_instance_id | default(false)






    # - name: Wait for VPS to get IP address
    #   retries: 30
    #   delay: 10
    #   until: instance_info.json.instance.main_ip is defined and instance_info.json.instance.main_ip != ""
    #   block:
    #     - name: Get instance info
    #       uri:
    #         url: https://api.vultr.com/v2/instances/{{ instance_id }}
    #         method: GET
    #         headers:
    #           Authorization: "Bearer {{ vultr_api_key }}"
    #           Accept: "application/json"
    #       register: instance_info

    # - name: Save server IP
    #   set_fact:
    #     server_ip: "{{ instance_info.json.instance.main_ip }}"

    # - name: Write IP to temporary inventory file
    #   copy:
    #     content: "[vpnserver]\n{{ server_ip }} ansible_user={{ username }} ansible_ssh_private_key_file={{ ssh_key_base }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n"
    #     dest: ../inventory.ini